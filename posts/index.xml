<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Kyriet&#39;s Blog 🦔</title>
    <link>https://kyriets.github.io/posts/</link>
    <description>Recent content in Posts on Kyriet&#39;s Blog 🦔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl</language>
    <lastBuildDate>Sat, 12 Jul 2025 21:41:04 +0200</lastBuildDate>
    <atom:link href="https://kyriets.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wzorzec Visitor, czyli separacja danych i zachowania</title>
      <link>https://kyriets.github.io/posts/wzorzec-visitor-czyli-separacja-danych-i-zachowania/</link>
      <pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/wzorzec-visitor-czyli-separacja-danych-i-zachowania/</guid>
      <description>&lt;p&gt;Wzorzec visitor oddziela dane od algorytmu. Pokażę na przykładach, kiedy warto stosować ten wzorzec, a kiedy nie. Warto wspomnieć, że nie zawsze chcemy takiej separacji.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jak zaimplementować siłę tarcia w grze</title>
      <link>https://kyriets.github.io/posts/jak-zaimplementowac-sile-tarcia-w-grze/</link>
      <pubDate>Fri, 23 May 2025 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/jak-zaimplementowac-sile-tarcia-w-grze/</guid>
      <description>&lt;p&gt;Jakiś czas temu oglądałem wideo na YouTube, w którym indie game deweloper &lt;a href=&#34;https://www.youtube.com/@randyprime&#34;&gt;@randy&lt;/a&gt; pokazywał jak zaimplementował fizykę w swojej grze. Moją uwagę zwróciła niepoprawnie (niezgodnie z zasadami fizyki) zaimplementowana siła tarcia. W tym wpisie odpowiem dlaczego.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jak to jest nie widzieć lub nie słyszeć?</title>
      <link>https://kyriets.github.io/posts/jak-to-jest-nie-widziec-lub-nie-slyszec/</link>
      <pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/jak-to-jest-nie-widziec-lub-nie-slyszec/</guid>
      <description>&lt;p&gt;Osobie widzącej i słyszącej bardzo trudno jest wyobrazić sobie &lt;em&gt;jak to jest&lt;/em&gt; nie widzieć lub nie słyszeć od zawsze. W tym wpisie postaram się to zrobić.&lt;/p&gt;</description>
    </item>
    <item>
      <title>LycaMobile — kocham wasze ceny, ale nienawidzę całej reszty</title>
      <link>https://kyriets.github.io/posts/lycamobile-kocham-ich-ceny-ale-nienawidze-calej-reszty/</link>
      <pubDate>Wed, 16 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/lycamobile-kocham-ich-ceny-ale-nienawidze-calej-reszty/</guid>
      <description>&lt;p&gt;To co mnie jeszcze trzyma w sieci LycaMobile, to absurdalnie niskie ceny za pakiety. Trzeba tylko umieć przebrnąć przez antyludzki user experience ich strony internetowej i aplikacji.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Przydatne alt-kody dla polskiej typografii</title>
      <link>https://kyriets.github.io/posts/przydatne-alt-kody-do-polskiej-typografii/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/przydatne-alt-kody-do-polskiej-typografii/</guid>
      <description>&lt;p&gt;Prezentuję przydatne alt-kody, które pod Windowsem pozwalają wprowadzać takie znaki jak: &lt;code&gt;„&lt;/code&gt;, &lt;code&gt;”&lt;/code&gt;, &lt;code&gt;—&lt;/code&gt;, &lt;code&gt;–&lt;/code&gt;, itp. Wystarczy przytrzymać klawisz &lt;code&gt;Alt&lt;/code&gt; i wpisać odpowiednią liczbę na numerycznej klawiaturze.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visual Studio skacze do pliku [decompiled] zamiast oryginalnego</title>
      <link>https://kyriets.github.io/posts/visual-studio-skacze-do-decompiled/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/visual-studio-skacze-do-decompiled/</guid>
      <description>&lt;p&gt;Po utworzeniu domyślnego projektu Avalonia (C#) przy użyciu kreatora Visual Studio może się okazać, że skakanie do definicji typów będzie otwierało [decompiled] źródła zamiast oryginalnych plików. To może być frustrujące, kiedy chcemy podpatrzeć jak Avalonia robi coś pod spodem. Naprawmy to.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Perfekcjonizm — zabójca produktywności</title>
      <link>https://kyriets.github.io/posts/perfekcjonizm-to-nic-dobrego/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/perfekcjonizm-to-nic-dobrego/</guid>
      <description>&lt;p&gt;Perfekcjonizm to największa zmora produktywności. Na pewno każdy kiedyś wpadł w pułapkę niekończącego się majsterkowania, ciągłego niezadowolenia i zaczynania od nowa.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Mock: Nadpisanie &lt;code&gt;EXPECT_CALL&lt;/code&gt;-a</title>
      <link>https://kyriets.github.io/posts/google-mock-nadpisanie-expect-calla/</link>
      <pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/google-mock-nadpisanie-expect-calla/</guid>
      <description>&lt;p&gt;&lt;strong&gt;EXPECT_CALL jest nienadpisywalny&lt;/strong&gt;. Nie oznacza to, że nie można mieć kilku &lt;code&gt;EXPECT_CALL&lt;/code&gt;-ów na tę samą funkcję.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Mock: &lt;code&gt;ON_CALL&lt;/code&gt; &#43; &lt;code&gt;EXPECT_CALL&lt;/code&gt;</title>
      <link>https://kyriets.github.io/posts/google-mock-on-call-&#43;-expect-call/</link>
      <pubDate>Sat, 04 May 2024 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/google-mock-on-call-&#43;-expect-call/</guid>
      <description>&lt;p&gt;Krótki wpis o tym jak &lt;code&gt;ON_CALL&lt;/code&gt; i &lt;code&gt;EXPECT_CALL&lt;/code&gt; mogą się uzupełniać. Warto pamiętać, że &lt;code&gt;EXPECT_CALL&lt;/code&gt; nie &amp;ldquo;nadpisuje&amp;rdquo; zachowań zdefiniowanych przez &lt;code&gt;ON_CALL&lt;/code&gt;. Oba te makra można stosować jednocześnie na tym samym mocku.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Refleksja nad sukcesem Steve&#39;a Jobsa na podstawie książki „Steve Jobs” Waltera Isaacsona</title>
      <link>https://kyriets.github.io/posts/refleksja-nad-sukcesem-stevea-jobsa/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/refleksja-nad-sukcesem-stevea-jobsa/</guid>
      <description>&lt;p&gt;Moim celem na przeczytanie książki „Steve Jobs” Waltera Isaacsona było wydobycie wskazówek, a może nawet rad, które mogłyby pomóc powtórzyć tak spektakularny sukces, który osiągnął założyciel Apple. Po latach odnalazłem tę pracę i uznałem, że jest na tyle ciekawa, że warto ją opublikować. Poniżej znajdziesz jej treść.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jak powstał ten blog</title>
      <link>https://kyriets.github.io/posts/jak-powstal-ten-blog/</link>
      <pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/jak-powstal-ten-blog/</guid>
      <description>&lt;p&gt;Standardowo już każdy mój nowy blog otwieram wpisem o tym, jak powstał. Mam już za sobą conajmniej 5 blogów, każdy zbudowany na innej technologii. Tym razem postanowiłem wykorzystać &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jak jest zbudowany system plików FAT</title>
      <link>https://kyriets.github.io/posts/jak-jest-zbudowany-fat/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      <guid>https://kyriets.github.io/posts/jak-jest-zbudowany-fat/</guid>
      <description>&lt;p&gt;W tym wpisie opiszę podstawowe zasady działania systemu plików z rodziny FAT. Jeśli jesteś ciekawy co się dzieje &amp;ldquo;pod maską&amp;rdquo;, gdy dodajesz lub usuwasz plik na nośniku danych z systemem plików FAT, to zachęcam do lektury tego wpisu. Na przykładach i w praktyce pokażę jakie zmiany zachodzą na dysku podczas manipulacji plikami.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
